@inject FavoritesService FavoritesService

<!-- Card container with a click event to open details -->
<div class="card" @onclick="() => ShowDialog = true">
    <!-- Pokémon card image -->
    <img src="@Card.Images.Small" alt="@Card.Name" />
    
    <!-- Card actions -->
    <div class="card-buttons">
        <!-- Favorite button -->
        <button class="btn btn-sm @(IsFavorite ? "btn-primary" : "btn-secondary")" @onclick="ToggleFavorite" @onclick:stopPropagation>
            <span class="oi oi-heart"></span>
        </button>
        <!-- Info button -->
        <button class="btn btn-sm btn-secondary" @onclick="() => ShowDialog = true" @onclick:stopPropagation>
            <span class="oi oi-info"></span>
        </button>
    </div>
    
    <!-- Card name -->
    <div class="card-name">@Card.Name</div>
</div>

<!-- Modal to show Pokémon details -->
@if (ShowDialog)
{
    <div class="modal" tabindex="-1" style="display:block">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@Card.Name</h5>
                    <button type="button" class="btn-close" @onclick="() => ShowDialog = false"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6">
                            <img src="@Card.Images.Large" alt="@Card.Name" class="img-fluid" />
                        </div>
                        <div class="col-md-6">
                            <h6>Types:</h6>
                            <div class="d-flex flex-wrap gap-2">
                                @foreach (var type in Card.Types)
                                {
                                    <span class="badge bg-primary">@type</span>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public Card Card { get; set; } = new Card();

    private bool ShowDialog { get; set; }

    // Checks if the card is in the favorites list
    private bool IsFavorite => FavoritesService.IsFavorite(Card.Id);

    // Toggles the favorite status
    private async Task ToggleFavorite()
    {
        if (IsFavorite)
            await FavoritesService.RemoveFavorite(Card.Id);
        else
            await FavoritesService.AddFavorite(Card);
    }
}
